.container
  %h1.label-heading
    Search
  = render partial: "search_form"

  - if @q
    - if @scrapers.any? || @owners.any?
      %ul.search-type-nav.nav.nav-tabs
        %li{class: ('active' unless @type == "users"), role: "presentation"}
          = link_to search_path(q: @q, type: nil) do
            Scrapers
            %span.badge #{@scrapers.total_count}
        %li{class: ('active' if @type == "users"), role: "presentation"}
          = link_to search_path(q: @q, type: "users") do
            Users
            %span.badge #{@owners.total_count}

      - if @type == "users"
        .search-results
          - @owners.with_details.each do |owner, details|
            = render owner, highlight: details[:highlight]
        = paginate @owners
      - else
        - # TODO Make these filters actually work, this is a prototype
        .list-filters.btn-group
          = link_to "Only scrapers with data", "", class: "active btn btn-default"
          = link_to "All scrapers", "", class: "btn btn-default"
        .search-results
          - @scrapers.with_details.each do |scraper, details|
            = render scraper, highlight: details[:highlight]
        = paginate @scrapers

      - if @type == "users" && @owners.empty? && @scrapers.any?
        .alert.alert-info
          Sorry, we couldn’t find any users relevant to your search term
          %strong “#{@q}”.
      - elsif @type != "users" && @scrapers.empty? && @owners.any?
        .alert.alert-info
          Sorry, we couldn’t find any scrapers relevant to your search term
          %strong “#{@q}”.
    - else
      %h2 No results found
      %p
        Sorry, we couldn't find any scrapers or users relevant to your search term
        %strong “#{@q}”.
      %p
        Suggestions:

      %ul
        %li check the spelling
        %li try some more general or alternate terms

      %p You could also try browsing all #{link_to "scrapers", scrapers_path} or #{link_to "users", users_path}.
