:markdown
  # Secret values

  Scraper code on morph.io is public and visible to anyone. So, how can you
  use an authenticated API, say the Twitter API, in a scraper without letting
  everyone know your authentication credentials?

  This is where secret values come in. These are environment variables you
  can set. Only you and your scraper can see them.

  ### Setting secret values

  Let's say you have a secret value `sdf8sdbw9Hihf` you want to use in your scraper.
  We will now assign that value to an environment variable.
  We'll call it `MORPH_MYSECRET`. The name needs to
  start with `MORPH_`.

  1. Go to your scraper and click the "Settings" button
  2. Click "Add variable" and fill in the environment variable name and value
  3. Click "Update"

  Before you clicked "Update" it should have looked something like

.well
  .row
    .col-sm-3
      %label Name
    .col-sm-8
      %label Value

  .row
    .col-sm-3
      = text_field_tag :name, "MORPH_MYSECRET", disabled: true, class: "form-control"
    .col-sm-8
      = text_field_tag :value, "sdf8sdbw9Hihf", disabled: true, class: "form-control"

:markdown
  You can of course set as many different secret values as you want. You just
  need to click "Add variable" again and give each secret value its own
  unique name.


:markdown
  ### Reading secret values in your scraper

= render "language_tabs", id_prefix: 'reading', path: 'documentation/reading_secret_values'

:markdown
  ### Examples
  Sometimes there's nothing like seeing a real-life example. Here are some
  scrapers that use secret values. If you have a scraper you would like to add
  to this list, please #{mail_to "contact@oaf.org.au", "let us know"}.

- if Scraper.find_by(full_name: 'maxious/cat_photos')
  = render Scraper.find_by(full_name: 'maxious/cat_photos')
- if Scraper.find_by(full_name: 'philipnye/free-school-ofsted-ratings-output-test')
  = render Scraper.find_by(full_name: 'philipnye/free-school-ofsted-ratings-output-test')
- if Scraper.find_by(full_name: 'mlandauer/australian_food_products')
  = render Scraper.find_by(full_name: 'mlandauer/australian_food_products')
